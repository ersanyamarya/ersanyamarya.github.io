{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as contentful from 'contentful';\nvar client = contentful.createClient({\n  space: 'd7k4z456z5gd',\n  accessToken: 'ce4da323ff0babe562754212cbfb9b689fd6460cc09d67718957f68b08484d23'\n});\nexport function findAllPosts() {\n  return _findAllPosts.apply(this, arguments);\n}\n\nfunction _findAllPosts() {\n  _findAllPosts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var query, dataArray;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = {\n              'content_type': 'post'\n            };\n            _context.next = 3;\n            return client.getEntries(query).then(function (res) {\n              // console.log(JSON.stringify(res.items, null, 2));\n              return res.items;\n            }).catch(function (err) {\n              console.log('err in catch');\n              return err;\n            });\n\n          case 3:\n            dataArray = _context.sent;\n\n            if (!_Array$isArray(dataArray)) {\n              // throw new Error('Cannot find posts')4\n              console.log('error');\n            }\n\n            return _context.abrupt(\"return\", dataArray);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _findAllPosts.apply(this, arguments);\n}\n\nexport function findOnePost(_x) {\n  return _findOnePost.apply(this, arguments);\n}\n\nfunction _findOnePost() {\n  _findOnePost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(SLUG) {\n    var query, dataArray;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = {\n              'content_type': 'post',\n              'fields.slug[match]': SLUG\n            };\n            _context2.next = 3;\n            return client.getEntries(query).then(function (res) {\n              console.log(res.items[0].fields.featuredImage);\n              return res.items;\n            }).catch(function (err) {\n              console.log('err in catch');\n              return err;\n            });\n\n          case 3:\n            dataArray = _context2.sent;\n\n            if (!_Array$isArray(dataArray)) {\n              // throw new Error('Cannot find posts')\n              console.log('error');\n            }\n\n            return _context2.abrupt(\"return\", dataArray[0]);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _findOnePost.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}