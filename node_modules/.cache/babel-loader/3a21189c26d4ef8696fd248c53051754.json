{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as contentful from 'contentful';\nvar client = contentful.createClient({\n  space: 'd7k4z456z5gd',\n  accessToken: 'ce4da323ff0babe562754212cbfb9b689fd6460cc09d67718957f68b08484d23'\n});\nexport function findAllPosts() {\n  return _findAllPosts.apply(this, arguments);\n}\n\nfunction _findAllPosts() {\n  _findAllPosts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var query, dataArray;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = {\n              'content_type': 'post'\n            };\n            _context.next = 3;\n            return client.getEntries(query).then(function (res) {\n              // console.log(JSON.stringify(res.items, null, 2));\n              return res.items;\n            }).catch(function (err) {\n              console.log('err in catch');\n              return err;\n            });\n\n          case 3:\n            dataArray = _context.sent;\n\n            if (!_Array$isArray(dataArray)) {\n              // throw new Error('Cannot find posts')4\n              console.log('error');\n            }\n\n            return _context.abrupt(\"return\", dataArray);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _findAllPosts.apply(this, arguments);\n}\n\nexport function findOnePost(_x) {\n  return _findOnePost.apply(this, arguments);\n}\n\nfunction _findOnePost() {\n  _findOnePost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(SLUG) {\n    var query, dataArray;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = {\n              'content_type': 'post',\n              'fields.slug[match]': SLUG\n            };\n            _context2.next = 3;\n            return client.getEntries(query).then(function (res) {\n              console.log('no errors');\n              return res.items;\n            }).catch(function (err) {\n              console.log('err in catch');\n              return err;\n            });\n\n          case 3:\n            dataArray = _context2.sent;\n\n            if (!_Array$isArray(dataArray)) {\n              // throw new Error('Cannot find posts')\n              console.log('error');\n            }\n\n            return _context2.abrupt(\"return\", dataArray[0]);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _findOnePost.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/arya/workDirectory/testTSFB/gh-pages-app/utils/contentfulUtils.ts"],"names":["contentful","client","createClient","space","accessToken","findAllPosts","query","getEntries","then","res","items","catch","err","console","log","dataArray","findOnePost","SLUG"],"mappings":";;;AAAA,OAAO,KAAKA,UAAZ,MAA4B,YAA5B;AAEA,IAAIC,MAAM,GAAGD,UAAU,CAACE,YAAX,CAAwB;AACnCC,EAAAA,KAAK,EAAE,cAD4B;AAEnCC,EAAAA,WAAW,EAAE;AAFsB,CAAxB,CAAb;AAMA,gBAAsBC,YAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,KADD,GACS;AACZ,8BAAgB;AADJ,aADT;AAAA;AAAA,mBAIyCL,MAAM,CAACM,UAAP,CAAkBD,KAAlB,EAAyBE,IAAzB,CAA8B,UAAAC,GAAG,EAAI;AACjF;AACA,qBAAOA,GAAG,CAACC,KAAX;AACD,aAH6C,EAG3CC,KAH2C,CAGrC,UAAAC,GAAG,EAAI;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,qBAAOF,GAAP;AACD,aAN6C,CAJzC;;AAAA;AAICG,YAAAA,SAJD;;AAYL,gBAAI,CAAC,eAAcA,SAAd,CAAL,EAA+B;AAC7B;AACAF,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAED;;AAhBI,6CAkBEC,SAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBP,gBAAsBC,WAAtB;AAAA;AAAA;;;;;2BAAO,kBAA2BC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCX,YAAAA,KADD,GACS;AACZ,8BAAgB,MADJ;AAEZ,oCAAsBW;AAFV,aADT;AAAA;AAAA,mBAKyChB,MAAM,CAACM,UAAP,CAAkBD,KAAlB,EAAyBE,IAAzB,CAA8B,UAAAC,GAAG,EAAI;AACjFI,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,qBAAOL,GAAG,CAACC,KAAX;AACD,aAH6C,EAG3CC,KAH2C,CAGrC,UAAAC,GAAG,EAAI;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,qBAAOF,GAAP;AACD,aAN6C,CALzC;;AAAA;AAKCG,YAAAA,SALD;;AAaL,gBAAI,CAAC,eAAcA,SAAd,CAAL,EAA+B;AAC7B;AACAF,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAED;;AAjBI,8CAmBEC,SAAS,CAAC,CAAD,CAnBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as contentful from 'contentful'\nimport { IncomingContentful } from '../interfaces';\nvar client = contentful.createClient({\n  space: 'd7k4z456z5gd',\n  accessToken: 'ce4da323ff0babe562754212cbfb9b689fd6460cc09d67718957f68b08484d23'\n})\n\n\nexport async function findAllPosts() {\n  const query = {\n    'content_type': 'post'\n  }\n  const dataArray: IncomingContentful[] = await client.getEntries(query).then(res => {\n    // console.log(JSON.stringify(res.items, null, 2));\n    return res.items\n  }).catch(err => {\n    console.log('err in catch');\n    return err\n  })\n\n  if (!Array.isArray(dataArray)) {\n    // throw new Error('Cannot find posts')4\n    console.log('error');\n\n  }\n\n  return dataArray\n}\n\nexport async function findOnePost(SLUG: string) {\n  const query = {\n    'content_type': 'post',\n    'fields.slug[match]': SLUG\n  }\n  const dataArray: IncomingContentful[] = await client.getEntries(query).then(res => {\n    console.log('no errors');\n    return res.items\n  }).catch(err => {\n    console.log('err in catch');\n    return err\n  })\n\n  if (!Array.isArray(dataArray)) {\n    // throw new Error('Cannot find posts')\n    console.log('error');\n\n  }\n\n  return dataArray[0]\n}"]},"metadata":{},"sourceType":"module"}